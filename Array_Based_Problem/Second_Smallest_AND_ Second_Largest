// (Better Solution) : But require two traversals of O(n) Time complexity

import java.util.*;
public class Main
{
    public static void find_min_max(int arr[],int n){
        int small=Integer.MAX_VALUE,large=Integer.MIN_VALUE,sec_small=Integer.MAX_VALUE,sec_large=Integer.MIN_VALUE;
      
        for(int i=0; i<n; i++){
            System.out.print(arr[i]+" ");  // for displaying the array element
            small = Math.min(small,arr[i]);
            large = Math.max(large,arr[i]);
        }
        
        System.out.println("\n"+small + " "+large);
        
        for(int i=0;i<n;i++){
            if(arr[i] < sec_small && arr[i] != small){
                sec_small = arr[i];
            }else if(arr[i] > sec_large && arr[i] != large){
                sec_large = arr[i];
            }
        }
        
        System.out.println(sec_small+ " "+ sec_large);
    }
	public static void main(String[] args) {
		int arr[] = {4,5,1,7,5,3};
		int n = arr.length;
		find_min_max(arr,n);
	}
}

//(Best Solution) : Require only one traversal of O(n)
import java.util.*;

public class Main
{
    public static void sec_smallest(int arr[],int n){
        if(n==0 || n==1){
            System.out.println("-1  -1");
            System.exit(0);
        }
        
        int small=Integer.MAX_VALUE,sec_small=Integer.MAX_VALUE;
        
        for(int i=0;i<n;i++){
            if(arr[i]<small){
                sec_small = small;
                small=arr[i];
            }else if(arr[i] < sec_small && arr[i] !=small){
                sec_small = arr[i];
            }
        }
        System.out.println(sec_small);
    }
    
    public static void sec_largest(int arr[], int n){
        int large=Integer.MIN_VALUE,sec_large=Integer.MIN_VALUE;
        
        for(int i=0;i<n;i++){
            if(arr[i]>large){
                sec_large=large;
                large=arr[i];
            }else if(arr[i] > sec_large && arr[i] != large){
                sec_large = arr[i];
            }
        }
        System.out.println(sec_large);
    }
	public static void main(String[] args) {
		int arr[] = {3,2,1,4,5,7,8};
		int n = arr.length;
		
		sec_smallest(arr,n);
		sec_largest(arr,n);
	}
}
